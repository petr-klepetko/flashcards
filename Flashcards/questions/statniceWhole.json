{
   "name": "Empirický výzkum",
   "questions": [
      {
         "question": "4 – Informační etika – Co je etika?",
         "answer": "Nauka o lidských záměrech, jednání a vztazích z hlediska jejich dobrého nebo špatného důsledku na jednotlivce a společnost"
      },
      {
         "question": "4 – Informační etika – Co je informační etika?",
         "answer": "Oblast morálky\n– týká se informací – vzniku, šíření, využívání"
      },
      {
         "question": "4 – Informační etika – 4 oblasti informační etiky",
         "answer": "Soukromí (co si můžeme nechat, co musíme zveřejnit)\n– Přesnost (jak autentické jsou informace)\n– Vlastnictví (autorská práva)\n– Dostupnost (3 dovednosti pro získání infocmací – gramotnost, přístup k info technologiím a přístup k informacím samotným), Informační propast = rozdíly mezi lidmi v možnosti přístupu k informacím"
      },
      {
         "question": "4 – Informační etika – Problémy v etice + dělení",
         "answer": "– Mikroetické = v rámci chování jednotlivce a jeho odpovědností, týká se soukromí, autorských práv, stahování obsahu, zabezpečení...\n– Makroetické = vliv působení informací na celou společnost (podobné počítačové etice). Na základě mikroetiky se vymýšlejí globální normy pro všechny"
      },
      {
         "question": "5 – Podnikatelská etika – Popis",
         "answer": "– jedná se normativní etiku = vytváří pravidla chování\n– hlavní předpoklad je fair play v podnikání (opak korupčního jednání)"
      },
      {
         "question": "5 – Podnikatelská etika – Jaký konflikt řeší?",
         "answer": "Každý podnikatel upřednostňuje své zájmy, které ale můžou být v protikladu s zájmy ostatních jednotlivců a společnosti, hledá se vyvážení"
      },
      {
         "question": "5 – Podnikatelská etika – Proč ale není v rozporu s ekonomií?",
         "answer": "Neetické podnikatelské chování může mít destruktivní důsledky na všechny, to může způsobit, že ani ten podnikatel sám už nebude moct působit.\nEtická společnost je udržitelná a má nízké náklady na chod – když se všichni chovají eticky, nejsou náklady na vynucovací prostředky; Obecně to způsobí lepší podnikatelské prostředí"
      },
      {
         "question": "5 – Podnikatelská etika – 4 úrovně",
         "answer": "1) Individuální – úroveň jednotlivce\n2) Podniková – podnik, instituce\n3) Hospodářství – společnost jako celek\n 4) Nadnárodní společnosti – mezinárodní obchod"
      },
      {
         "question": "5 – Podnikatelská etika – oblasti",
         "answer": "Práva zaměstnanců, ochrana spotřebitele, diskriminace, využívání energie"
      },
      {
         "question": "5 – Podnikatelská etika – Manažerská etika",
         "answer": "Způsob řízení, kdy se etické principy uplatňují do všech úrovní managementu. Manažer tvaruje motivace a cíle pracovníků tak, aby byly v souladu s morálkou."
      },
      {
         "question": "6 – Práce s informacemi a textovými dokumenty – Dostupnost zdrojů",
         "answer": "– Nutné ověřit před začátkem psaní práce\nOvěření, kde se nachazí dané zdroje (internet, knihovna...)\n– Jak jsou zdroje přístupné (jestli se v nich dostaneme v archivu, nebo v médiích...)\n– Jestli jsme schopni z nich čerpat (rozumíme jazyku, umíme číst dané písmo...)"
      },
      {
         "question": "6 – Práce s informacemi a textovými dokumenty – Druhy pramenů",
         "answer": "Primární prameny – Obsahují nové informace o daném tématu, jsou to práce, monografie atd.\nSekundární prameny – Neobsahují nové informace, čerpají z primárních pramenů a hlavně na ně odkazují, čímž informují, kde se primární zdroje nachází.\n– Je vhodné s nimi začít pro orientaci v tématu"
      },
      {
         "question": "6 – Práce s informacemi a textovými dokumenty – Co kontrolovat u zdroje na internetu?",
         "answer": "Je tam autor, a pod jakou organizací je to napsané?\n– Je objektivně napsaný?\n– Je aktuální?\n– Je info ověřitelné?\n– Jsou tam zdroje?"
      },
      {
         "question": "6 – Práce s informacemi a textovými dokumenty – Důvody pro citování",
         "answer": "– Pragmatické = aby bylo možné ověřit informace a dohledat další, informační etika\n– Právní – zákon 121/2007 sb O právu autorském"
      },
      {
         "question": "6 – Práce s informacemi a textovými dokumenty – Bibliografický záznam, citace, bibliografie",
         "answer": "– Bibliografie = seznam literatury, která se týká práce, ale nebyla bezprostředně použita\n– Bibliografický záznam = souhrn údajů o citované publikaci, pro její identifikaci\n– Citace = převzetí textu jiného autora (doslovná, parafrázovaná)"
      },
      {
         "question": "6 – Práce s informacemi a textovými dokumenty – Jazyková úprava",
         "answer": "Jazyk = popisný, výkladový, úvahový\nPoužívají se odborné termíny, složitá souvětí, větná kondenzace (podstatná jména slovesná místo vedlejší věty)\nOsoba autora (Neosobní, autorský plurál, singulár)"
      },
      {
         "question": "6 – Práce s informacemi a textovými dokumenty – Formální úprava",
         "answer": "60 znaků na řádek, 30 řádků na stránce,\nnormostrana 1800 znaků\npísmo 11-12, řádkování 1,25 - 1,5, patkové písmo"
      },
      {
         "question": "7 - Objekty a jejich vlastnosti – Co je objekt, \n– Z čeho se skládá\nJaké údaje sledujeme?\nObecné objektové vlastnosti",
         "answer": "– Objekt je abstrahovaný model reality, obsahuje pouze vlastnosti, které jsou pro daný case užitečné\nSkládá se z vlastností (datových atributů) a akcí, které může vykonávat (metod)\n– Vlastnosti: Abstrakce, třídy & instance, komunikace objektů, zapouzdření, dědičnost, polymorfismus"
      },
      {
         "question": "7 - Objekty a jejich vlastnosti – Abstrakce; třída vs instance; volání metod; zapouzdření",
         "answer": "Abstrakce = vytvoření modelu pouze s vlastnostmi, které jsou pro daný případ podstatné\nTřída = obecná šablona daného 'typu objektů', když ji naplníme daty, aby představovala konkrétní případ dané třídy, je to instances\nVolání metod = objekty můžou navzájem volat metody ostatních obejktů, tím se spojují\nZapouzdření = související metody a data jsou spolu ve třídách"
      },
      {
         "question": "7 - Objekty a jejich vlastnosti – Dědičnost",
         "answer": "Třída do sebe absorbuje atributy a metody z předka\nMůže být víceúrovňová - z potomka může dědit někdo další, ale v javě jde dědit jen z jednoho předka\nV javě je hlavní třída Object, kterou všechny ostatní dědí"
      },
      {
         "question": "7 - Objekty a jejich vlastnosti – Proč se dědí?",
         "answer": "Specializace = nová třída je konkrétní podtyp předka, předkovy vlastnosti jsou stejné, ale přidají se další\nPolymorfismus = překrývání metod (potomek má jinou implementaci stejně pojmenované metody) a přetěžování metod (potomek má více metod stejného názvu, ty mají různý počet a typ parametrů a automaticky se vybere vhodná)\nZnovupoužití kódu = znovu použití některého kódu z předka a rozšíření. Pokud se děje jen toto, vznikne třída, která nejde přetypovat na předka (to jinak musí jít)"
      },
      {
         "question": "8 – Vzory při vývoji systému – Na co obecně jsou, Základní skupiny",
         "answer": "Standardní ověřené řešení často se opakujících problémů\nNávrhové = Řešení často se opakujících problémů\nArchitektonické = architektonické problémy – návrh celkové struktury kódu\nAnalytické, vzory kódu, vzory pro UI"
      },
      {
         "question": "8 – Vzory při vývoji systému – Návrhové vzory: Co to je, proč se používají, jak se znázorňují, katalogy",
         "answer": "Doporučené postupy pro řešení často se opakujících úloh\nUsnadňují práci, dodržují zásady správného programování\nGoF – gang of five, skupina popisuje 23 základních návrhových vzorů, Pecinovský\nKreslí se do UML diagramů"
      },
      {
         "question": "8 – Vzory při vývoji systému – vzory podle Pecinovského",
         "answer": "Jednoduchá tovární metoda - metoda, která umí vracet instanci daného různých tříd (vytvoří nebo najde existující)\nPřepravka – pokud meotda vrací více hodnot najednou, je možné je vrátit pomocí instance třídy 'přepravka', která ty vracené hodnoty má jako atributy\nKnihovní třída – třída jako úložiště často používaných metod"
      },
      {
         "question": "8 – Vzory při vývoji systému – Členění podle GoF",
         "answer": "Strukturální – uspořádání tříd a komponent\nPro vytváření objektů\nPro chování v systému"
      },
      {
         "question": "8 – Vzory při vývoji systému – Strukturální vzory",
         "answer": "Adaptér = třída, která slouží jako prostřeedník mezi třídou s rozhraním a s implementací, aby se to správně mapovalo\nBridge = Prostředník mezi abstrakcí (např. UI) a implementací (např. aplikační logikou). aby byly ty dvě nezávislé\nComposite = přístup k hierarchickým strukturám, např. stromové\nDecorator = třída, která přidá k jiné třídě funkcionalitu, aniž bychom tu původní měnili (přidáme nový interface, přičemž implementace je buď třída nebo dekorátor (ty nové věci budou tam)\nFacade = třída, která slouží jako jednodušší nebo sjednocené rozhraní pro více tříd (zase přemapovává požadavky)\nFlyweight = pokud je hodně malých objektů stejného typu, tak se vytvoří jedna třída, která obsahuje společné vytknuté vlastnosti a potom zvlášť informace o specifikacích všech konkrétních instancí\nProxy = odstiňuj objekt od uživatelů, sám k objektu přistupuje"
      },
      {
         "question": "8 – Vzory při vývoji systému – Vzory pro vytváření objektů",
         "answer": "Factory method = vytváří instanci některé z připravených tříd až za běhu programu\nAbstraktní továrna = vytváří více objektů, které spolu souvisí (a jsou podobné)\nSingleton = dovoluje vytvořit jen jednu instanci, ta se získá přes getInstance(), ta buď vytvoří novou, nebo pokud už je, tak vrátí tu vytvořenou"
      },
      {
         "question": "8 – Vzory při vývoji systému – Vzory chování",
         "answer": "Mediator = prostředník – objekt, co zajišťuje komunikaci objektů, Observer = dvojice subjekt (pozorovaný) a observer (pozorovatel), pro situaci, kdy je při změně objektů potřeba informovat ostatní"
      },
      {
         "question": "8 – Vzory při vývoji systému – Architektonické vzory – vrstvy",
         "answer": "Vrstvy = Agregátová vrstva (agregovaná funkce z elementárních - excelová tabulka připravená pro určitý účel)\nFiltrující vrstva (odstínění nepodstatných funkcionalit); Nepřímá vrstva (zapouzdření všech vrapperl - přístupů k jednotlivým komponentám"
      },
      {
         "question": "8 – Vzory při vývoji systému – Tok dat",
         "answer": "Filter = rozdělení úloh na řadu menších, které jsou nezávislé\nPipe - datové filtery mezi buffery"
      },
      {
         "question": "8 – Vzory při vývoji systému – centralizace dat, interakce s uživatelem, Interakce komponent",
         "answer": "Shared repository = jedna komponenta slouží jako datové úložiště, ke kterému přistupují ostatní komponenty\nInterakce s uživatelem (MVC)\nInterakce komponent = Client server, peer to peer"
      },
      {
         "question": "",
         "answer": ""
      },
      {
         "question": "",
         "answer": ""
      },
      {
         "question": "",
         "answer": ""
      },
      {
         "question": "",
         "answer": ""
      },
      {
         "question": "",
         "answer": ""
      }
   ]
}